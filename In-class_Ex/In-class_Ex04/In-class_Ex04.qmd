---
title: "In-class Exercise 4"
author: "Dr. Kam Tin Seong"
date: "30 January 2023"
date-modified: "`r Sys.Date()`"
format: html
execute: 
  eval: true
  echo: true
  warning: false
editor: visual  
---

## Getting started

```{r}
pacman::p_load(maptools, sf, raster, spatstat, tmap)
```

Things to learn from this code chunk.

## Importing Data

```{r}
childcare_sf <- st_read("data/child-care-services-geojson.geojson") %>%
  st_transform(crs = 3414)
```

```{r}
sg_sf <- st_read(dsn = "data", 
                 layer="CostalOutline")
```

```{r}
mpsz_sf <- st_read(dsn = "data", 
                layer = "MP14_SUBZONE_WEB_PL")

```

### Visualising the sf layers

It is always a good practice to plot the output sf layers on OSM layer to ensure that they have been imported properly and been projected on an appropriate projection system.

```{r}
#| code-fold: true
#| code-summary: "Show the code"
tmap_mode("view")
tm_shape(childcare_sf) +
  tm_dots(alph = 0.5, 
          size=0.01) +
  tm_view(set.zoom.limits = c(11,14))
```

## Geospatial Data Wrangling

```{r}
childcare <- as_Spatial(childcare_sf)
mpsz <- as_Spatial(mpsz_sf)
sg <- as_Spatial(sg_sf)
```

```{r}
childcare_sp <- as(childcare, "SpatialPoints")
sg_sp <- as(sg, "SpatialPolygons")
```

```{r}
childcare_ppp <- as(childcare_sp, "ppp")
childcare_ppp
```

### Handling duplicated point events

```{r}
childcare_ppp_jit <- rjitter(childcare_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)
```

```{r}
any(duplicated(childcare_ppp_jit))
```

### Creating owin object

```{r}
sg_owin <- as(sg_sp, "owin")
plot(sg_owin)
```

### Combining point events object and owin object

```{r}
childcareSG_ppp = childcare_ppp[sg_owin]
summary(childcareSG_ppp)
```

```{r}
plot(childcareSG_ppp)
```
