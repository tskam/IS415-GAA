{
  "hash": "0ebfa616db7a4a43a54d16f33a34bd1a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 9: Geographically Weighted Predictive Modelling: SpatialRF methods\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  warning: false\n  freeze: true\nformat: html\n---\n\n\n## Overview\n\nIn this in-class exercise, you will learn how to perform predictive modelling by using [spatialRF](https://blasbenito.github.io/spatialRF/index.html) package.\n\n## Datasets\n\nFor the purpose of this in-class exercise, the following HDB \n\n## Install and Load R packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, tidyverse, tmap, \n               tidymodels, spatialRF)\n```\n:::\n\n\n## The Data\n\n### Importing geospatial data\n\nThe geospatial data used in this hands-on exercise is called MP14_SUBZONE_WEB_PL. It is in ESRI shapefile format. The shapefile consists of URA Master Plan 2014's planning subzone boundaries. Polygon features are used to represent these geographic boundaries. The GIS data is in svy21 projected coordinates systems.\n\nThe code chunk below is used to import *MP_SUBZONE_WEB_PL* shapefile by using `st_read()` of **sf** packages.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz = st_read(dsn = \"data/geospatial\", \n               layer = \"MP14_SUBZONE_WEB_PL\") %>%\n  st_transform(3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\tskam\\IS415-GAA\\In-class_Ex\\In-class_Ex09\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\n### Importing HBD resale data\n\nIn this in-class exercise, HDB resale 2017 data set called *HDB_resale* will be used.  It is in *rds* format and is available in *rds* sub-folder of *In-class_Ex09*. \n\n::: {.panel-tabset}\n## The task\n\nUsing appropriate tidyverse function to import HDB_resale.rds into R environment.  Name the output object *rs_tbl*.\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_sf = read_rds(\"data/rds/HDB_resale.rds\")\n```\n:::\n\n:::\n\n::: {.panel-tabset}\n## The task\n\nUsing appropriate R function to check the object class of *rs_tbl*.\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(rs_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"sf\"         \"tbl_df\"     \"tbl\"        \"data.frame\"\n```\n\n\n:::\n:::\n\n:::\n\n## Data Sampling\n\nNext, we will split *rs_sf* into training and test data sets with 65% and 35% respectively.\n\n::: {.panel-tabset}\n\n## The task\n\nUsing appropriate function of rsample package, derive the training and test data sets from *rs_sf*.  Called the output objects *train_data* and *test_data* respectively.\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(rs_sf, \n                              prop = 5/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n```\n:::\n\n:::\n\n## Preparing Coordinates Data\n\n### Extracting coordinates data\n\n::: {.panel-tabset}\n\n## The task\n\nUsing appropriate sf fucntion, extract the x,y coordinates of the full, training and test data sets.\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(rs_sf)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n```\n:::\n\n:::\n\nBefore continue, we write all the output into rds for future used.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords_train <- write_rds(coords_train, \"data/rds/coords_train.rds\" )\ncoords_test <- write_rds(coords_test, \"data/rds/coords_test.rds\" )\n```\n:::\n\n\n14.9.2 Dropping geometry field\n\nFirst, we will drop geometry column of the sf data.frame by using st_drop_geometry() of sf package.\n\ntrain_data <- train_data %>% \n  st_drop_geometry()\n\n## Geographically Weighted Predictive Model: spatialRF methods\n\n### Computing distance matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndm_train <- dist(coords_train)\ndm_test <- dist(coords_test)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_dm <- as.matrix(dm_train) \ntest_dm <- as.matrix(dm_test)\n```\n:::\n\n\nWrite the data frame into rds for future use.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(train_dm,\n          \"data/spatialRF/train_dm.rds\")\nwrite_rds(test_dm, \n          \"data/spatialRF/test_dm.rds\")\n```\n:::\n\n\n### Converting from sf object to data frame\n\n::: {.panel-tabset}\n\n## The task\n\nUsing appropriate sf and R functions to perform the following tasks:\n\n- drop the geometry column from train_data and test_data, and\n- convert both into data frame.\n\n## The code\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_df <- train_data %>%\n  st_drop_geometry() %>%\n  as.data.frame()\n\ntest_df <- test_data %>%\n  st_drop_geometry() %>%\n  as.data.frame()\n```\n:::\n\n:::\n\n\n\n## Reading the modelling data sets\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist_th <- c(0, 500, 1000, 1500, 2000, 2500, 3000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmem <- mem(dist_mat)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvif(train_df[,2:17])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   variable   vif\n1                  PROX_CBD 2.574\n2          PROX_GOOD_PRISCH 1.859\n3         WITHIN_1KM_PRISCH 1.545\n4                 PROX_MALL 1.431\n5      REMIANING_LEASE_MTHS 1.382\n6     WITHIN_350M_CHILDCARE 1.344\n7          PROX_SUPERMARKET 1.339\n8                 PROX_CHAS 1.328\n9                 PROX_PARK 1.246\n10                 PROX_MRT 1.245\n11              PROX_HAWKER 1.238\n12             STOREY_ORDER 1.206\n13         PROX_ELDERLYCARE 1.193\n14          WITHIN_350M_BUS 1.156\n15           FLOOR_AREA_SQM 1.150\n16 WITHIN_350M_KINDERGARTEN 1.130\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(apply(train_df, 2, is.na))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\napply(train_df, 2, var) == 0\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            RESALE_PRICE           FLOOR_AREA_SQM             STOREY_ORDER \n                   FALSE                    FALSE                    FALSE \n    REMIANING_LEASE_MTHS                 PROX_CBD         PROX_ELDERLYCARE \n                   FALSE                    FALSE                    FALSE \n             PROX_HAWKER                 PROX_MRT                PROX_PARK \n                   FALSE                    FALSE                    FALSE \n        PROX_GOOD_PRISCH                PROX_MALL                PROX_CHAS \n                   FALSE                    FALSE                    FALSE \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n                   FALSE                    FALSE                    FALSE \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n                   FALSE                    FALSE \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(apply(scale(train_df), 2, is.nan))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(apply(scale(train_df), 2, is.infinite))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n### Fitting a non-spatial random forest model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_rf <- rf(\n  data = train_df,\n  dependent.variable.name = \"RESALE_PRICE\",\n  predictor.variable.names = colnames(train_df)[2:17],\n  distance.matrix = train_dm,\n  distance.thresholds = dist_th,\n  seed = 1234,\n  n.cores = 16\n  )\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09-spatialRF_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex09-spatialRF_files/figure-html/unnamed-chunk-19-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex09-spatialRF_files/figure-html/unnamed-chunk-19-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nModel type\n  - Fitted with:                     ranger()\n  - Response variable:               RESALE_PRICE\n\nRandom forest parameters\n  - Type:                            Regression\n  - Number of trees:                 500\n  - Sample size:                     7950\n  - Number of predictors:            16\n  - Mtry:                            4\n  - Minimum node size:               5\n\n\nModel performance \n  - R squared (oob):                  0.9494482\n  - R squared (cor(obs, pred)^2):     0.9883209\n  - Pseudo R squared (cor(obs, pred)):0.9941433\n  - RMSE (oob):                       26920.18\n  - RMSE:                             13370.28\n  - Normalized RMSE:                  0.1133074\n\nModel residuals \n  - Stats: \n        ┌───────────┬──────────┬─────────┬───────┬─────────┬───────────┐\n        │ Min.      │ 1st Q.   │ Median  │ Mean  │ 3rd Q.  │ Max.      │\n        ├───────────┼──────────┼─────────┼───────┼─────────┼───────────┤\n        │ -87026.25 │ -7326.43 │ -345.20 │ 29.72 │ 6994.44 │ 106191.47 │\n        └───────────┴──────────┴─────────┴───────┴─────────┴───────────┘\n  - Normality: \n      - Shapiro-Wilks W: 0.963 \n      - p-value        : 0 \n      - Interpretation : Residuals are not normal \n\n  - Spatial autocorrelation: \n             ┌──────────┬───────────┬─────────┬──────────────────┐\n             │ Distance │ Moran's I │ P value │ Interpretation   │\n             ├──────────┼───────────┼─────────┼──────────────────┤\n             │      0.0 │    -0.097 │   0.000 │ Negative spatial │\n             │          │           │         │ correlation      │\n             ├──────────┼───────────┼─────────┼──────────────────┤\n             │    500.0 │     0.033 │   0.000 │ Positive spatial │\n             │          │           │         │ correlation      │\n             ├──────────┼───────────┼─────────┼──────────────────┤\n             │   1000.0 │     0.026 │   0.000 │ Positive spatial │\n             │          │           │         │ correlation      │\n             ├──────────┼───────────┼─────────┼──────────────────┤\n             │   1500.0 │     0.022 │   0.000 │ Positive spatial │\n             │          │           │         │ correlation      │\n             ├──────────┼───────────┼─────────┼──────────────────┤\n             │   2000.0 │     0.017 │   0.000 │ Positive spatial │\n             │          │           │         │ correlation      │\n             ├──────────┼───────────┼─────────┼──────────────────┤\n             │   2500.0 │     0.016 │   0.000 │ Positive spatial │\n             │          │           │         │ correlation      │\n             ├──────────┼───────────┼─────────┼──────────────────┤\n             │   3000.0 │     0.015 │   0.000 │ Positive spatial │\n             │          │           │         │ correlation      │\n             └──────────┴───────────┴─────────┴──────────────────┘\n\nVariable importance: \n                   ┌──────────────────────────┬────────────┐\n                   │ Variable                 │ Importance │\n                   ├──────────────────────────┼────────────┤\n                   │ PROX_CBD                 │ 115466.348 │\n                   ├──────────────────────────┼────────────┤\n                   │ REMIANING_LEASE_MTHS     │ 101297.023 │\n                   ├──────────────────────────┼────────────┤\n                   │ PROX_GOOD_PRISCH         │  68078.336 │\n                   ├──────────────────────────┼────────────┤\n                   │ PROX_MRT                 │  47483.984 │\n                   ├──────────────────────────┼────────────┤\n                   │ PROX_ELDERLYCARE         │  44118.374 │\n                   ├──────────────────────────┼────────────┤\n                   │ WITHIN_1KM_PRISCH        │  42979.212 │\n                   ├──────────────────────────┼────────────┤\n                   │ FLOOR_AREA_SQM           │  42432.236 │\n                   ├──────────────────────────┼────────────┤\n                   │ PROX_HAWKER              │  38059.008 │\n                   ├──────────────────────────┼────────────┤\n                   │ STOREY_ORDER             │  35989.756 │\n                   ├──────────────────────────┼────────────┤\n                   │ PROX_PARK                │  35575.073 │\n                   ├──────────────────────────┼────────────┤\n                   │ PROX_MALL                │  32134.797 │\n                   ├──────────────────────────┼────────────┤\n                   │ PROX_SUPERMARKET         │  24601.096 │\n                   ├──────────────────────────┼────────────┤\n                   │ WITHIN_350M_CHILDCARE    │  18253.872 │\n                   ├──────────────────────────┼────────────┤\n                   │ PROX_CHAS                │  18133.172 │\n                   ├──────────────────────────┼────────────┤\n                   │ WITHIN_350M_BUS          │  17194.097 │\n                   ├──────────────────────────┼────────────┤\n                   │ WITHIN_350M_KINDERGARTEN │  14461.568 │\n                   └──────────────────────────┴────────────┘\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(rs_rf, \n          \"data/spatialRF/rs_rf.rds\")\n```\n:::\n\n\n::: callout-warning\nThis is a very time-consuming process.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_training_df_moran(\n  data = condo_resale,\n  dependent.variable.name = \"SELLING_PRICE\",\n  predictor.variable.names = colnames(condo_resale)[5:23],\n  distance.matrix = dist_mat,\n  distance.thresholds = dist_th,\n  point.color = \"gray40\"\n)\n```\n:::\n\n\n### Retrieving RF results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_rf <- read_rds(\"data/spatialRF/rs_rf.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_moran(rs_rf,\n           verbose = FALSE)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09-spatialRF_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n### Calibrating Spatial Random Forest\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrs_sprf <- rf_spatial(\n  data = train_df,\n  dependent.variable.name = \"RESALE_PRICE\",\n  predictor.variable.names = colnames(train_df)[2:17],\n  distance.matrix = train_dm,\n  distance.thresholds = 580,\n  method = \"hengl\",\n  n.cores = 16\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nModel type\n  - Fitted with:                     rf_spatial()\n  - rf_spatial() method:             hengl\n  - Response variable:               RESALE_PRICE\n\nRandom forest parameters\n  - Type:                            Regression\n  - Number of trees:                 500\n  - Sample size:                     7950\n  - Number of predictors:            7966\n  - Mtry:                            89\n  - Minimum node size:               5\n\n\nModel performance \n  - R squared (oob):                  0.9137676\n  - R squared (cor(obs, pred)^2):     0.9665135\n  - Pseudo R squared (cor(obs, pred)):0.9831142\n  - RMSE (oob):                       35159.67\n  - RMSE:                             21979.42\n  - Normalized RMSE:                  0.1862663\n\nModel residuals \n  - Stats: \n     ┌────────────┬───────────┬─────────┬─────────┬──────────┬───────────┐\n     │ Min.       │ 1st Q.    │ Median  │ Mean    │ 3rd Q.   │ Max.      │\n     ├────────────┼───────────┼─────────┼─────────┼──────────┼───────────┤\n     │ -160787.03 │ -11083.58 │ -116.03 │ -283.98 │ 11202.34 │ 181009.97 │\n     └────────────┴───────────┴─────────┴─────────┴──────────┴───────────┘\n  - Normality: \n      - Shapiro-Wilks W: 0.958 \n      - p-value        : 0 \n      - Interpretation : Residuals are not normal \n\n  - Spatial autocorrelation: \n             ┌──────────┬───────────┬─────────┬──────────────────┐\n             │ Distance │ Moran's I │ P value │ Interpretation   │\n             ├──────────┼───────────┼─────────┼──────────────────┤\n             │    580.0 │    -0.017 │   0.000 │ Negative spatial │\n             │          │           │         │ correlation      │\n             └──────────┴───────────┴─────────┴──────────────────┘\n\nVariable importance: \n              ┌────────────────────────────────────┬────────────┐\n              │ Variable                           │ Importance │\n              ├────────────────────────────────────┼────────────┤\n              │ REMIANING_LEASE_MTHS               │  30401.006 │\n              ├────────────────────────────────────┼────────────┤\n              │ spatial_predictors (max)           │  17268.053 │\n              ├────────────────────────────────────┼────────────┤\n              │ STOREY_ORDER                       │   9867.741 │\n              ├────────────────────────────────────┼────────────┤\n              │ FLOOR_AREA_SQM                     │   9721.497 │\n              ├────────────────────────────────────┼────────────┤\n              │ PROX_MRT                           │   6757.921 │\n              ├────────────────────────────────────┼────────────┤\n              │ PROX_ELDERLYCARE                   │   6440.545 │\n              ├────────────────────────────────────┼────────────┤\n              │ PROX_SUPERMARKET                   │   5763.097 │\n              ├────────────────────────────────────┼────────────┤\n              │ PROX_MALL                          │   5018.655 │\n              ├────────────────────────────────────┼────────────┤\n              │ PROX_PARK                          │   4234.020 │\n              ├────────────────────────────────────┼────────────┤\n              │ PROX_HAWKER                        │   3975.560 │\n              ├────────────────────────────────────┼────────────┤\n              │ PROX_GOOD_PRISCH                   │   3473.198 │\n              ├────────────────────────────────────┼────────────┤\n              │ PROX_CHAS                          │   3456.148 │\n              ├────────────────────────────────────┼────────────┤\n              │ PROX_CBD                           │   3077.939 │\n              ├────────────────────────────────────┼────────────┤\n              │ WITHIN_350M_CHILDCARE              │   2582.144 │\n              ├────────────────────────────────────┼────────────┤\n              │ spatial_predictors (quantile 0.75) │   2551.512 │\n              ├────────────────────────────────────┼────────────┤\n              │ WITHIN_350M_BUS                    │   2403.532 │\n              ├────────────────────────────────────┼────────────┤\n              │ spatial_predictors (median)        │   1796.657 │\n              ├────────────────────────────────────┼────────────┤\n              │ WITHIN_350M_KINDERGARTEN           │   1625.543 │\n              ├────────────────────────────────────┼────────────┤\n              │ WITHIN_1KM_PRISCH                  │   1608.013 │\n              ├────────────────────────────────────┼────────────┤\n              │ spatial_predictors (quantile 0.25) │   1322.933 │\n              ├────────────────────────────────────┼────────────┤\n              │ spatial_predictors (min)           │    257.898 │\n              └────────────────────────────────────┴────────────┘\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex09-spatialRF_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](In-class_Ex09-spatialRF_files/figure-html/unnamed-chunk-24-2.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(rs_sprf, \"data/spatialRF/rs_sprf.rds\")\n```\n:::\n",
    "supporting": [
      "In-class_Ex09-spatialRF_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}